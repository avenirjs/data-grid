{"version":3,"file":"avn-data-grid.entry-3f737921.js","sources":["../../../data-grid/dist/esm/avn-data-grid.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-b9f5f8f6.js';\n\nconst avnDataGridCss = \":host{--font-family:sans-serif;--radius:16px;--padding:24px;--shadow-color:220 3% 15%;--shadow-strength:1%;--shadow:0 -1px 3px 0 hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),\\n    0 1px 2px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 2%)),\\n    0 2px 5px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 4%)),\\n    0 4px 12px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 5%)),\\n    0 12px 15px -5px hsl(var(--shadow-color) / calc(var(--shadow-strength) + 7%))}:host{font-family:var(--font-family);width:100%;height:100%;display:flex;margin:0;justify-content:center;align-items:center}:host .data-grid-container{display:flex;flex-flow:column nowrap;background:white;width:80%;margin:0 auto;border-radius:var(--radius);box-shadow:var(--shadow)}:host ::slotted(avn-data-grid-row[heading]){border-top-left-radius:var(--radius);border-top-right-radius:var(--radius)}@media only screen and (max-width: 600px){:host{font-size:16px}}@media only screen and (min-width: 600px){:host{font-size:16px}}@media only screen and (min-width: 768px){:host{font-size:18px}}@media only screen and (min-width: 992px){:host{font-size:20px}}\";\n\nconst AvnDataGrid = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.rows = [];\n    this.initialRowState = [];\n    this.mode = undefined;\n  }\n  sortingHandler(event) {\n    const { cellIndex, direction } = event.detail;\n    if (!direction)\n      return;\n    const sortedRowValues = [...this.initialRowState];\n    sortedRowValues.sort((a, b) => {\n      if (a.index === b.index)\n        return 0;\n      if (a.index === '0')\n        return -1;\n      if (b.index === '0')\n        return 1;\n      if (a.cells[cellIndex].value < b.cells[cellIndex].value) {\n        return direction === 'asc' ? -1 : 1;\n      }\n      else if (a.cells[cellIndex].value > b.cells[cellIndex].value) {\n        return direction === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n    this.gridContainer.firstElementChild.assignedElements().forEach((row, index) => {\n      if (index !== 0) {\n        Array.from(row.children).forEach((cell, idx) => {\n          cell.textContent = sortedRowValues[index].cells[idx].value;\n        });\n      }\n    });\n  }\n  connectedCallback() {\n    this.selectRow = this.selectRow.bind(this);\n  }\n  componentDidLoad() {\n    this.gridContainer = this.el.shadowRoot.querySelector('.data-grid-container');\n    const gridSlot = this.gridContainer.firstElementChild;\n    this.rows = gridSlot.assignedElements();\n    this.rows.forEach((row, index) => {\n      row.dataset.index = String(index);\n      if (this.mode === 'single-select') {\n        const radioBtn = document.createElement('avn-data-grid-radio');\n        if (index === 0) {\n          radioBtn.style.visibility = 'collapse';\n        }\n        row.firstElementChild.prepend(radioBtn);\n      }\n      else if (this.mode === 'multi-select') {\n        const checkboxBtn = document.createElement('avn-data-grid-checkbox');\n        row.firstElementChild.prepend(checkboxBtn);\n      }\n    });\n    this.initialRowState = [...this.rows].map((row) => ({\n      index: row.dataset.index,\n      cells: Array.from(row.children).map((cell) => ({\n        value: cell.textContent\n      }))\n    }));\n    this.gridContainer.addEventListener('click', this.selectRow);\n  }\n  disconnectedCallback() {\n    this.gridContainer.removeEventListener('click', this.selectRow);\n  }\n  selectRow(event) {\n    const row = event.target.closest('avn-data-grid-row');\n    if (this.mode === 'single-select') {\n      if (row.heading)\n        return;\n      this.rows.forEach((r) => {\n        const c = r.querySelector('avn-data-grid-cell');\n        const rBtn = c.querySelector('avn-data-grid-radio');\n        r.selected = false;\n        rBtn.checked = false;\n      });\n      const cell = row.querySelector('avn-data-grid-cell');\n      const radioBtn = cell.querySelector('avn-data-grid-radio');\n      radioBtn.checked = !radioBtn.checked;\n      row.selected = radioBtn.checked;\n    }\n    if (this.mode === 'multi-select') {\n      const cell = row.querySelector('avn-data-grid-cell');\n      const checkbox = cell.querySelector('avn-data-grid-checkbox');\n      checkbox.checked = !checkbox.checked;\n      row.selected = checkbox.checked;\n      if (row.heading) {\n        const rowsWithoutHeader = [, ...this.rows];\n        rowsWithoutHeader.forEach((r) => {\n          const c = r.querySelector('avn-data-grid-cell');\n          const cBtn = c.querySelector('avn-data-grid-checkbox');\n          r.selected = !row.selected;\n          cBtn.checked = !row.selected;\n        });\n      }\n      else {\n        const [headingRow] = this.rows;\n        const hCell = headingRow.querySelector('avn-data-grid-cell');\n        const hCheckboxBtn = hCell.querySelector('avn-data-grid-checkbox');\n        headingRow.selected = false;\n        hCheckboxBtn.checked = false;\n      }\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: \"data-grid-container\" }, h(\"slot\", null))));\n  }\n  get el() { return getElement(this); }\n};\nAvnDataGrid.style = avnDataGridCss;\n\nexport { AvnDataGrid as avn_data_grid };\n\n//# sourceMappingURL=avn-data-grid.entry.js.map"],"names":["avnDataGridCss","AvnDataGrid","hostRef","registerInstance","event","cellIndex","direction","sortedRowValues","b","row","index","cell","idx","gridSlot","radioBtn","checkboxBtn","r","rBtn","checkbox","cBtn","headingRow","hCheckboxBtn","h","Host","getElement"],"mappings":"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"}