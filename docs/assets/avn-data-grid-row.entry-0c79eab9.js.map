{"version":3,"file":"avn-data-grid-row.entry-0c79eab9.js","sources":["../../../data-grid/dist/esm/avn-data-grid-row.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-b9f5f8f6.js';\n\nconst avnDataGridRowCss = \":host{--row-background:#EFEDFD;--row-background--heading:#ececec;--row-padding:24px}:host .row-container{display:flex;flex-flow:row nowrap;width:100%;line-height:1.75;letter-spacing:0.1}:host([heading]){background:var(--row-background--heading);font-weight:bold;letter-spacing:0}:host([selected]:not([heading])){background:var(--row-background)}:host ::slotted(avn-data-grid-radio){margin-top:auto;margin-bottom:auto}:host([heading]) ::slotted(avn-data-grid-cell[sortable]){--cell-alignment:center}:host ::slotted(avn-data-grid-cell){padding-right:var(--row-padding)}\";\n\nconst AvnDataGridRow = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.avnDataGridSorting = createEvent(this, \"avnDataGridSorting\", 7);\n    this.cells = [];\n    this.heading = false;\n    this.selected = undefined;\n  }\n  connectedCallback() {\n    this.sortColumn = this.sortColumn.bind(this);\n  }\n  componentDidLoad() {\n    this.rowContainer = this.el.shadowRoot.querySelector('.row-container');\n    const rowSlot = this.rowContainer.firstElementChild;\n    this.cells = rowSlot.assignedElements();\n    if (this.heading) {\n      this.cells.forEach((cell) => {\n        if (cell.sortable) {\n          const sortingBtn = document.createElement('avn-data-grid-sorting-button');\n          cell.append(sortingBtn);\n        }\n      });\n    }\n    this.rowContainer.addEventListener('click', this.sortColumn);\n  }\n  disconnectedCallback() {\n    this.rowContainer.removeEventListener('click', this.sortColumn);\n  }\n  /**\n   * Handles sorting of the grid by the clicked column.\n   *\n   * @param {Event} event - The click event object.\n   * @returns {void}\n   */\n  sortColumn(event) {\n    const cell = event.target.closest('avn-data-grid-cell');\n    if (!cell.sortable)\n      return;\n    this.cells\n      .filter((cell) => cell.sortable)\n      .filter((c) => c !== cell)\n      .forEach((cell) => {\n      const sortingBtn = cell.querySelector('avn-data-grid-sorting-button');\n      sortingBtn.value = undefined;\n    });\n    const sortingBtn = cell.querySelector('avn-data-grid-sorting-button');\n    this.avnDataGridSorting.emit({\n      cellIndex: this.cells.findIndex((c) => c === cell),\n      direction: sortingBtn.value\n    });\n  }\n  render() {\n    return (h(Host, null, h(\"div\", { class: 'row-container' }, h(\"slot\", null))));\n  }\n  get el() { return getElement(this); }\n};\nAvnDataGridRow.style = avnDataGridRowCss;\n\nexport { AvnDataGridRow as avn_data_grid_row };\n\n//# sourceMappingURL=avn-data-grid-row.entry.js.map"],"names":["avnDataGridRowCss","AvnDataGridRow","hostRef","registerInstance","createEvent","rowSlot","cell","sortingBtn","event","c","h","Host","getElement"],"mappings":"sMAEA,MAAMA,EAAoB,0jBAEpBC,EAAiB,KAAM,CAC3B,YAAYC,EAAS,CACnBC,EAAiB,KAAMD,CAAO,EAC9B,KAAK,mBAAqBE,EAAY,KAAM,qBAAsB,CAAC,EACnE,KAAK,MAAQ,GACb,KAAK,QAAU,GACf,KAAK,SAAW,MACjB,CACD,mBAAoB,CAClB,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,CAC5C,CACD,kBAAmB,CACjB,KAAK,aAAe,KAAK,GAAG,WAAW,cAAc,gBAAgB,EACrE,MAAMC,EAAU,KAAK,aAAa,kBAClC,KAAK,MAAQA,EAAQ,mBACjB,KAAK,SACP,KAAK,MAAM,QAASC,GAAS,CAC3B,GAAIA,EAAK,SAAU,CACjB,MAAMC,EAAa,SAAS,cAAc,8BAA8B,EACxED,EAAK,OAAOC,CAAU,EAEhC,CAAO,EAEH,KAAK,aAAa,iBAAiB,QAAS,KAAK,UAAU,CAC5D,CACD,sBAAuB,CACrB,KAAK,aAAa,oBAAoB,QAAS,KAAK,UAAU,CAC/D,CAOD,WAAWC,EAAO,CAChB,MAAMF,EAAOE,EAAM,OAAO,QAAQ,oBAAoB,EACtD,GAAI,CAACF,EAAK,SACR,OACF,KAAK,MACF,OAAQA,GAASA,EAAK,QAAQ,EAC9B,OAAQG,GAAMA,IAAMH,CAAI,EACxB,QAASA,GAAS,CACnB,MAAMC,EAAaD,EAAK,cAAc,8BAA8B,EACpEC,EAAW,MAAQ,MACzB,CAAK,EACD,MAAMA,EAAaD,EAAK,cAAc,8BAA8B,EACpE,KAAK,mBAAmB,KAAK,CAC3B,UAAW,KAAK,MAAM,UAAWG,GAAMA,IAAMH,CAAI,EACjD,UAAWC,EAAW,KAC5B,CAAK,CACF,CACD,QAAS,CACP,OAAQG,EAAEC,EAAM,KAAMD,EAAE,MAAO,CAAE,MAAO,eAAiB,EAAEA,EAAE,OAAQ,IAAI,CAAC,CAAC,CAC5E,CACD,IAAI,IAAK,CAAE,OAAOE,EAAW,IAAI,CAAI,CACvC,EACAX,EAAe,MAAQD"}