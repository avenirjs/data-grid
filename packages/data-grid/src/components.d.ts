/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AvnDataGrid {
        "mode": 'single-select' | 'multi-select' | undefined;
    }
    /**
     * Represents a single cell in an AvnDataGrid.
     */
    interface AvnDataGridCell {
        /**
          * Indicates whether the cell should display a horizontal line separator.
         */
        "line": boolean;
        /**
          * Indicates whether the column is sortable.
         */
        "sortable": boolean;
    }
    /**
     * @description A custom checkbox component for an avn-data-grid
     * @example <avn-data-grid-checkbox checked={true}>Checked</avn-data-grid-checkbox>
     * <avn-data-grid-checkbox checked={false}>Unchecked</avn-data-grid-checkbox>
     */
    interface AvnDataGridCheckbox {
        /**
          * @description The state of the checkbox (checked or unchecked)
          * @default false
          * @type {boolean}
          * @memberof AvnDataGridCheckbox
         */
        "checked": boolean;
    }
    /**
     * @description A custom radio button component for use in an Avanade data grid.
     * @example <avn-data-grid-radio checked={true}>Radio Button Label</avn-data-grid-radio>
     */
    interface AvnDataGridRadio {
        /**
          * @description Indicates whether the radio button is checked or not.
          * @default false
          * @type boolean
          * @mutable 
          * @reflect
         */
        "checked": boolean;
    }
    /**
     * This component represents a row in an `avn-data-grid` component.
     */
    interface AvnDataGridRow {
        /**
          * Indicates whether the row is a heading row or not.
         */
        "heading": boolean;
        /**
          * Indicates whether the row is currently selected or not.
         */
        "selected": boolean;
    }
    /**
     * A button component for sorting data grid columns in ascending or descending order.
     * @tag avn-data-grid-sorting-button
     * @style avn-data-grid-sorting-button.css
     * @shadow true
     */
    interface AvnDataGridSortingButton {
        /**
          * The current sorting direction, can be 'asc', 'desc', or undefined.
          * @prop {boolean} mutable
          * @prop {boolean} reflect
         */
        "value": 'asc' | 'desc' | undefined;
    }
}
export interface AvnDataGridRowCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAvnDataGridRowElement;
}
export interface AvnDataGridSortingButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAvnDataGridSortingButtonElement;
}
declare global {
    interface HTMLAvnDataGridElement extends Components.AvnDataGrid, HTMLStencilElement {
    }
    var HTMLAvnDataGridElement: {
        prototype: HTMLAvnDataGridElement;
        new (): HTMLAvnDataGridElement;
    };
    /**
     * Represents a single cell in an AvnDataGrid.
     */
    interface HTMLAvnDataGridCellElement extends Components.AvnDataGridCell, HTMLStencilElement {
    }
    var HTMLAvnDataGridCellElement: {
        prototype: HTMLAvnDataGridCellElement;
        new (): HTMLAvnDataGridCellElement;
    };
    /**
     * @description A custom checkbox component for an avn-data-grid
     * @example <avn-data-grid-checkbox checked={true}>Checked</avn-data-grid-checkbox>
     * <avn-data-grid-checkbox checked={false}>Unchecked</avn-data-grid-checkbox>
     */
    interface HTMLAvnDataGridCheckboxElement extends Components.AvnDataGridCheckbox, HTMLStencilElement {
    }
    var HTMLAvnDataGridCheckboxElement: {
        prototype: HTMLAvnDataGridCheckboxElement;
        new (): HTMLAvnDataGridCheckboxElement;
    };
    /**
     * @description A custom radio button component for use in an Avanade data grid.
     * @example <avn-data-grid-radio checked={true}>Radio Button Label</avn-data-grid-radio>
     */
    interface HTMLAvnDataGridRadioElement extends Components.AvnDataGridRadio, HTMLStencilElement {
    }
    var HTMLAvnDataGridRadioElement: {
        prototype: HTMLAvnDataGridRadioElement;
        new (): HTMLAvnDataGridRadioElement;
    };
    /**
     * This component represents a row in an `avn-data-grid` component.
     */
    interface HTMLAvnDataGridRowElement extends Components.AvnDataGridRow, HTMLStencilElement {
    }
    var HTMLAvnDataGridRowElement: {
        prototype: HTMLAvnDataGridRowElement;
        new (): HTMLAvnDataGridRowElement;
    };
    /**
     * A button component for sorting data grid columns in ascending or descending order.
     * @tag avn-data-grid-sorting-button
     * @style avn-data-grid-sorting-button.css
     * @shadow true
     */
    interface HTMLAvnDataGridSortingButtonElement extends Components.AvnDataGridSortingButton, HTMLStencilElement {
    }
    var HTMLAvnDataGridSortingButtonElement: {
        prototype: HTMLAvnDataGridSortingButtonElement;
        new (): HTMLAvnDataGridSortingButtonElement;
    };
    interface HTMLElementTagNameMap {
        "avn-data-grid": HTMLAvnDataGridElement;
        "avn-data-grid-cell": HTMLAvnDataGridCellElement;
        "avn-data-grid-checkbox": HTMLAvnDataGridCheckboxElement;
        "avn-data-grid-radio": HTMLAvnDataGridRadioElement;
        "avn-data-grid-row": HTMLAvnDataGridRowElement;
        "avn-data-grid-sorting-button": HTMLAvnDataGridSortingButtonElement;
    }
}
declare namespace LocalJSX {
    interface AvnDataGrid {
        "mode"?: 'single-select' | 'multi-select' | undefined;
    }
    /**
     * Represents a single cell in an AvnDataGrid.
     */
    interface AvnDataGridCell {
        /**
          * Indicates whether the cell should display a horizontal line separator.
         */
        "line"?: boolean;
        /**
          * Indicates whether the column is sortable.
         */
        "sortable"?: boolean;
    }
    /**
     * @description A custom checkbox component for an avn-data-grid
     * @example <avn-data-grid-checkbox checked={true}>Checked</avn-data-grid-checkbox>
     * <avn-data-grid-checkbox checked={false}>Unchecked</avn-data-grid-checkbox>
     */
    interface AvnDataGridCheckbox {
        /**
          * @description The state of the checkbox (checked or unchecked)
          * @default false
          * @type {boolean}
          * @memberof AvnDataGridCheckbox
         */
        "checked"?: boolean;
    }
    /**
     * @description A custom radio button component for use in an Avanade data grid.
     * @example <avn-data-grid-radio checked={true}>Radio Button Label</avn-data-grid-radio>
     */
    interface AvnDataGridRadio {
        /**
          * @description Indicates whether the radio button is checked or not.
          * @default false
          * @type boolean
          * @mutable 
          * @reflect
         */
        "checked"?: boolean;
    }
    /**
     * This component represents a row in an `avn-data-grid` component.
     */
    interface AvnDataGridRow {
        /**
          * Indicates whether the row is a heading row or not.
         */
        "heading"?: boolean;
        /**
          * Emitted when a user clicks on a sortable cell to sort the grid by that column.
          * @event avnDataGridSorting
          * @composed true
          * @cancelable true
          * @bubbles true
          * @type {EventEmitter<{ cellIndex: number, direction: 'ascending' | 'descending' }>}
         */
        "onAvnDataGridSorting"?: (event: AvnDataGridRowCustomEvent<any>) => void;
        /**
          * Indicates whether the row is currently selected or not.
         */
        "selected"?: boolean;
    }
    /**
     * A button component for sorting data grid columns in ascending or descending order.
     * @tag avn-data-grid-sorting-button
     * @style avn-data-grid-sorting-button.css
     * @shadow true
     */
    interface AvnDataGridSortingButton {
        /**
          * Triggered when the button is clicked, emitting the current sorting direction.
          * @event avnDataGridSorting
          * @composed true
          * @cancelable true
          * @bubbles true
         */
        "onAvnDataGridSorting"?: (event: AvnDataGridSortingButtonCustomEvent<'asc' | 'desc'>) => void;
        /**
          * The current sorting direction, can be 'asc', 'desc', or undefined.
          * @prop {boolean} mutable
          * @prop {boolean} reflect
         */
        "value"?: 'asc' | 'desc' | undefined;
    }
    interface IntrinsicElements {
        "avn-data-grid": AvnDataGrid;
        "avn-data-grid-cell": AvnDataGridCell;
        "avn-data-grid-checkbox": AvnDataGridCheckbox;
        "avn-data-grid-radio": AvnDataGridRadio;
        "avn-data-grid-row": AvnDataGridRow;
        "avn-data-grid-sorting-button": AvnDataGridSortingButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "avn-data-grid": LocalJSX.AvnDataGrid & JSXBase.HTMLAttributes<HTMLAvnDataGridElement>;
            /**
             * Represents a single cell in an AvnDataGrid.
             */
            "avn-data-grid-cell": LocalJSX.AvnDataGridCell & JSXBase.HTMLAttributes<HTMLAvnDataGridCellElement>;
            /**
             * @description A custom checkbox component for an avn-data-grid
             * @example <avn-data-grid-checkbox checked={true}>Checked</avn-data-grid-checkbox>
             * <avn-data-grid-checkbox checked={false}>Unchecked</avn-data-grid-checkbox>
             */
            "avn-data-grid-checkbox": LocalJSX.AvnDataGridCheckbox & JSXBase.HTMLAttributes<HTMLAvnDataGridCheckboxElement>;
            /**
             * @description A custom radio button component for use in an Avanade data grid.
             * @example <avn-data-grid-radio checked={true}>Radio Button Label</avn-data-grid-radio>
             */
            "avn-data-grid-radio": LocalJSX.AvnDataGridRadio & JSXBase.HTMLAttributes<HTMLAvnDataGridRadioElement>;
            /**
             * This component represents a row in an `avn-data-grid` component.
             */
            "avn-data-grid-row": LocalJSX.AvnDataGridRow & JSXBase.HTMLAttributes<HTMLAvnDataGridRowElement>;
            /**
             * A button component for sorting data grid columns in ascending or descending order.
             * @tag avn-data-grid-sorting-button
             * @style avn-data-grid-sorting-button.css
             * @shadow true
             */
            "avn-data-grid-sorting-button": LocalJSX.AvnDataGridSortingButton & JSXBase.HTMLAttributes<HTMLAvnDataGridSortingButtonElement>;
        }
    }
}
